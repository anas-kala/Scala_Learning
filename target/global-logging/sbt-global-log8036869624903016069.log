[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\anask\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\anask\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.4 (Oracle Corporation Java 1.8.0_261)
[debug]       Load.loadUnit: plugins took 160.9034ms
[debug]       Load.loadUnit: defsScala took 0.3697ms
[debug] [Loading] Scanning directory C:\Users\anask\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\anask\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 34.3114 ms
[debug]           Load.resolveProject(global-plugins) took 73.51ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\anask\.sbt\1.0\plugins, plugins: List(<none>))) took 142.2707ms
[debug] [Loading] Done in C:\Users\anask\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 167.5205ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3792ms
[debug]     Load.loadUnit(file:/C:/Users/anask/.sbt/1.0/plugins/, ...) took 339.9691ms
[debug]   Load.apply: load took 843.46ms
[debug]   Load.apply: resolveProjects took 11.0174ms
[debug]   Load.apply: finalTransforms took 106.153399ms
[debug]   Load.apply: config.delegates took 16.568101ms
[debug]   Load.apply: Def.make(settings)... took 4738.5932ms
[debug]   Load.apply: structureIndex took 231.212699ms
[debug]   Load.apply: mkStreams took 2.7029ms
[info] loading global plugins from C:\Users\anask\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 21348.6409ms
[debug]           Load.loadUnit: plugins took 154.044399ms
[debug]           Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\anask\Documents\Scala_Akk_Kourse_Training\Kourse_Akka_Training\project
[debug]             Load.loadUnit: mkEval took 28.7253ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\anask\Documents\Scala_Akk_Kourse_Training\Kourse_Akka_Training\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.7686 ms
[info] loading settings for project kourse_akka_training-build from idea.sbt ...
[debug]               Load.resolveProject(kourse_akka_training-build) took 10.622901ms
[debug]             Load.loadTransitive: finalizeProject(Project(id kourse_akka_training-build, base: C:\Users\anask\Documents\Scala_Akk_Kourse_Training\Kourse_Akka_Training\project, plugins: List(<none>))) took 14.182ms
[debug] [Loading] Done in C:\Users\anask\Documents\Scala_Akk_Kourse_Training\Kourse_Akka_Training\project, returning: (kourse_akka_training-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 7033.753001ms
[debug]           Load.loadUnit: cleanEvalClasses took 11.187501ms
[debug]         Load.loadUnit(file:/C:/Users/anask/Documents/Scala_Akk_Kourse_Training/Kourse_Akka_Training/project/, ...) took 7200.866499ms
[debug]       Load.apply: load took 7205.3034ms
[debug]       Load.apply: resolveProjects took 0.162601ms
[debug]       Load.apply: finalTransforms took 12.888ms
[debug]       Load.apply: config.delegates took 0.3908ms
[debug]       Load.apply: Def.make(settings)... took 100.172ms
[debug]       Load.apply: structureIndex took 31.9742ms
[debug]       Load.apply: mkStreams took 0.002499ms
[info] loading project definition from C:\Users\anask\Documents\Scala_Akk_Kourse_Training\Kourse_Akka_Training\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 8585.561999ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\anask\Documents\Scala_Akk_Kourse_Training\Kourse_Akka_Training
[debug]       Load.loadUnit: mkEval took 0.445301ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\anask\Documents\Scala_Akk_Kourse_Training\Kourse_Akka_Training, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.7041 ms
[info] loading settings for project kourse_akka_training from build.sbt ...
[debug]         Load.resolveProject(kourse_akka_training) took 66.585601ms
[debug]       Load.loadTransitive: finalizeProject(Project(id kourse_akka_training, base: C:\Users\anask\Documents\Scala_Akk_Kourse_Training\Kourse_Akka_Training, plugins: List(<none>))) took 75.8865ms
[debug] [Loading] Done in C:\Users\anask\Documents\Scala_Akk_Kourse_Training\Kourse_Akka_Training, returning: (kourse_akka_training)
[debug]     Load.loadUnit: loadedProjectsRaw took 3869.1207ms
[debug]     Load.loadUnit: cleanEvalClasses took 17.151701ms
[debug]   Load.loadUnit(file:/C:/Users/anask/Documents/Scala_Akk_Kourse_Training/Kourse_Akka_Training/, ...) took 12473.3073ms
[debug] Load.apply: load took 12476.173101ms
[debug] Load.apply: resolveProjects took 0.1238ms
[debug] Load.apply: finalTransforms took 34.9215ms
[debug] Load.apply: config.delegates took 0.4158ms
[debug] Load.apply: Def.make(settings)... took 171.3297ms
[debug] Load.apply: structureIndex took 38.3454ms
[debug] Load.apply: mkStreams took 0.002301ms
[info] set current project to Kourse_Akka_Training (in build file:/C:/Users/anask/Documents/Scala_Akk_Kourse_Training/Kourse_Akka_Training/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54207 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54207, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Kourse_Akka_Training (in build file:/C:/Users/anask/Documents/Scala_Akk_Kourse_Training/Kourse_Akka_Training/)
[debug] > Exec(idea-shell, None, None)
